{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","console","log","PersonSearch","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","List","persons","setPersons","setMessage","person","name","toLowerCase","includes","map","key","number","onClick","window","confirm","phonebookService","p","setTimeout","Notification","message","style","width","padding","border","App","useState","setNewName","setNewNumber","setFilter","useEffect","allPersons","resetInputs","getUpdater","updater","event","target","className","preventDefault","some","find","updatedPerson","newPerson","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a555e08b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => {\n        console.log(response)\n    })\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport phonebookService from '../src/services/phonebook'\n\n\nconst PersonSearch = ({filter, handleFilterChange}) => {\n  return <p>Search for a person: <input value = {filter} onChange = {handleFilterChange} /></p>\n}\n\nconst PersonForm = (props) => {\n  return(\n    <form onSubmit = {props.addPerson}>\n        <h3>Add new:</h3>\n        name: <input value = {props.newName} onChange = {props.handleNameChange}/>\n        number: <input value = {props.newNumber} onChange = {props.handleNumberChange}/>\n        <br/>\n        <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nconst List = ({persons, setPersons , filter, setMessage}) => {\n\n  const deletePerson = (id) => () => {\n    if (window.confirm('Really, delete the person?')){\n      phonebookService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          setMessage(`Number removed from the phonebook.`)\n          setTimeout(() => setMessage(null), 3000)\n        })\n    }\n  }\n  \n  const getPersons = () => persons\n    .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    .map(person => <li key={person.name}>{person.name}: {person.number} <button onClick = {deletePerson(person.id)}>Delete</button></li>)\n\n  return <ul>{getPersons()}</ul>\n}\n\nconst Notification = ({message}) => {\n  if (message === null ) {\n    return null\n  }\n\n  const notificationStyle = () => {\n    return (\n      {\n        width: 400,\n        padding: 10,\n        border: '1px solid #ccc'\n      }\n    )\n  }\n\n  return (\n    <div style = {notificationStyle()} >\n      {message}\n    </div>\n  )\n\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(allPersons => setPersons(allPersons))\n  }, [])\n\n  const resetInputs = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n  \n  const getUpdater = (updater) => (event) => updater(event.target.value)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (!newName || !newNumber) {\n      alert('Both name and number are required.')\n      return\n    }\n\n    if (persons.some(person => person.name === newName)) {\n\n      if (window.confirm(`Update the number of ${newName}?`)){\n        const person = persons.find(p => p.name === newName)\n\n        phonebookService\n          .update(person.id, {...person, number: newNumber})\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson))\n            resetInputs()\n            setMessage(`The number of ${person.name} was updated.`)\n            setTimeout(() => setMessage(null), 3000)\n          })\n      }\n      return\n    }\n\n    phonebookService\n      .create({name: newName, number: newNumber})\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        resetInputs()\n        setMessage(`The number for ${newPerson.name} was added.`)\n        setTimeout(() => setMessage(null), 3000)\n      })\n  }\n\n  return (\n    <div className = 'content'>\n      <h2>Phonebook</h2>\n      <Notification message = {message} />\n      <PersonSearch filter = {filter} handleFilterChange = {getUpdater(setFilter)}/>\n      <PersonForm\n        addPerson = {addPerson}\n        newName = {newName}\n        handleNameChange = {getUpdater(setNewName)}\n        newNumber = {newNumber}\n        handleNumberChange = {getUpdater(setNewNumber)}\n      />\n      <h2>Numbers</h2>\n      <List persons={persons} setPersons={setPersons} filter = {filter} setMessage = {setMessage}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}